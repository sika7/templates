
// 960 1040 1120 1200 1280
container-width = 900px;

// breakpoint
screen-size ?= {
xs: 400
sm: 500
md: 768
lg: 1000
xl: 1200
}



// @mixinの定義
mq-up(breakpoint = md){
	screenSize = unit( screen-size[breakpoint] ,'px')
	@media screen and (min-width: screenSize ) {
		{block}
	}
}


mq-down(breakpoint = md) {
	screenSize = unit( screen-size[breakpoint] ,'px') - 1px
	@media screen and (max-width: screenSize ) {
		{block}
	}
}


// responsive
res-up(class) {
	.{class} {
		{block}
	}
	for key, value in screen-size {
		screenSize = unit( value ,'px')
		@media screen and (min-width: screenSize) {
			.{class}-{key} {
				{block}
			}
		}
	}
}

res-down(class) {
	.{class} {
		{block}
	}
	for key, value in screen-size {
		screenSize = unit( value ,'px') - 1px
		@media screen and (max-width: screenSize) {
			.{class}-{key} {
				{block}
			}
		}
	}
}

// グリットデザイン
column(maxcol,col) {
	(100% / maxcol * col)
}


grid(gridName, maxcol = 12, garter = 0) {
    .{gridName} {
        display: flex;
        flex-wrap: wrap;
        overflow: hidden;
        margin-left: unit( -(garter) ,'px')
        &.right {
            justify-content: flex-end;
        }
        &.center {
            justify-content: center;
        }
        &.bottom {
            align-items: flex-end;
        }
        &.align-center {
            align-items: center;
        }
        .{gridName}__item {
            float: left;
            padding-left: unit( (garter) ,'px')
            width column(maxcol,1)
        }
    }

    for num in (1..maxcol) {
        .cols-{num} {
            .{gridName}__item {
                width column(maxcol,num);
            }
        }
        .col-{num} {
            width column(maxcol,num);
        }
    }

    for key, value in screen-size {
        screenSize = unit( value ,'px')
        @media screen and (min-width: screenSize) {
            for num in (1..maxcol) {
                .col-{key}-{num} {
                    width column(maxcol,num)
                }
                &.cols-{key}-{num} {
                    .{gridName}__item {
                        width column(maxcol,num)
                    }
                }
            }
        }
    }
}

// グリッドを生成
grid(grid, 12, 20)


+res-up(none){
	display: none;
};

+res-up(none){
	display: none;
};


+res-up(br){
	display: block;
};



@for $i from 1 through 9{
	.mb#{i}{
		margin-bottom: i+rem !important;
	}
}



// // グリッドcss
gridcss(maxcol = 4, garter = 20) {
    display: flex
    flex-wrap: wrap
    overflow: hidden
    margin-left unit( -(garter) ,'px')
    & > *{
        padding-left: garter
        width column(maxcol,1)
    }
}

gridcss-col( columns, garter, breakpoint = md) {
	screenSize = unit( screen-size[breakpoint] ,'px') - 1px
    @media screen and (min-width: screenSize) {
        & {
            width column(columns,1)
        }
    }
}
// グリッドcssの指定方法
.testwap {
    gridcss(4,10)
    .testitem {
        gridcss-col(4, 10, xs)
        gridcss-col(6, 10, md)
        gridcss-col(8, 10, lg)
        gridcss-col(12, 10, xl)
    }
}


/*---------------------------------------------------*/
/*                     Material                      */
/*---------------------------------------------------*/


html {
  font-size: 10px;
  word-wrap: break-word;
  font-family: arial, sans-serif;
}

body {
  font-size: 1.4rem;
}

div,
section,
article,
nav,
aside {
  box-sizing: border-box;
}

h1,
h2,
h3,
h4,
h5 {
  font-size: 1rem;
  font-weight: normal;
  margin: 0;
  display: block;
}

ul,ol {
  list-style: none;
  padding: 0;
  margin: 0;
}

li {
  margin: 0;
  padding: 0;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

a {
  text-decoration: none;
}
svg{
	height: 100%;
	width: 100%;
}

mq-up(md){
  a[href^="tel"]{
    pointer-events: none;
  }
}

span {
  display: inline-block;
}






/*---------------------------------------------------*/
/*                     Component                     */
/*---------------------------------------------------*/




.video {
	position: relative;
	width: 100%;
	padding-top: 56.25%;
	iframe {
		position: absolute;
		top: 0;
		right: 0;
		width: 100%;
		height: 100%;
	}
}


.spNav{
	+mq-down(md) {
		display: none;
		.spNavToggle {
			display: block;
			position: fixed;
			top: 15px;
			right: 15px;
			padding: 5px 10px;
			border: solid 1px #333;
			width: 80px;
			background-color: $bass-color;
			font-size: 1em;
			&::before {
				content: "開く";
			}
			.spNavOpen &::before {
				content: "閉じる";
			}
		}
		.spNavOpen &{
			display: block;
		}
	}
}




// ゆらゆら横に揺れる
// animation: horizontal 1s ease-in-out infinite alternate;
@keyframes horizontal {
  0% {
    transform: translateX( -3px);
  }
  100% {
    transform: translateX( 0px);
  }
}

// ゆらゆら縦に揺れる
// animation: vertical 1s ease-in-out infinite alternate;
@keyframes vertical {
  0% {
    transform: translateY(-5px);
  }
  100% {
    transform: translateY( 0px);
  }
}
